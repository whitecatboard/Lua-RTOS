FS_IMAGE_COMPONENT_PATH := $(COMPONENT_PATH)

.PHONY: flashfs

ifneq (foo$(SPIFFS_IMAGE), foo)
FS_IMAGE := $(SPIFFS_IMAGE)
else
FS_IMAGE := default
endif

ifndef CONFIG_LUA_RTOS_SPIFFS_ROOT_FS
ifndef CONFIG_LUA_RTOS_LFS_ROOT_FS
FS_IMAGE_FILE := spiffs
else
FS_IMAGE_FILE := 
endif
else
FS_IMAGE_FILE := 
endif

ifeq (foo$(CONFIG_LUA_RTOS_SPIFFS_ROOT_FS), fooy)
FS_IMAGE_FILE := spiffs
endif

ifeq (foo$(CONFIG_LUA_RTOS_LFS_ROOT_FS), fooy)
FS_IMAGE_FILE := lfs
endif

ifeq (foo$(FS_IMAGE_FILE), foo)
$(error To flash a file system, spiffs or fatfs must be the default directory)
endif

# This part gets the information for the spiffs partition
ifneq ("$(wildcard $(PROJECT_PATH)/build/partitions.bin)","")
comma := ,

FS_PARTITION_INFO := $(shell $(IDF_PATH)/components/partition_table/gen_esp32part.py --quiet $(PROJECT_PATH)/build/partitions.bin | grep "filesys")

FS_BASE_ADDR   := $(word 4, $(subst $(comma), , $(FS_PARTITION_INFO)))
FS_SIZE_INFO   := $(word 5, $(subst $(comma), , $(FS_PARTITION_INFO)))
FS_SIZE_UNITS  := $(word 1, $(subst M, M, $(subst K, K, $(word 5, $(subst $(comma), , $(FS_PARTITION_INFO))))))
FS_SIZE_UNIT   := $(word 2, $(subst M, M, $(subst K, K, $(word 5, $(subst $(comma), , $(FS_PARTITION_INFO))))))

FS_SIZE_FACTOR := 1
ifeq ($(FS_SIZE_UNIT),K)
FS_SIZE_FACTOR := 1024
endif

ifeq ($(FS_SIZE_UNIT),M)
FS_SIZE_FACTOR := 1048576
endif

ifeq ("foo$(FS_SIZE_UNIT)", "foo")
FS_SIZE_UNITS := 512
FS_SIZE_FACTOR := 1024
endif

FS_SIZE := $(shell expr $(FS_SIZE_UNITS) \* $(FS_SIZE_FACTOR))
endif

fs: $(SDKCONFIG_MAKEFILE) mkspiffs mklfs fs-prepare
	@$(IDF_PATH)/components/partition_table/gen_esp32part.py --quiet $(PROJECT_PATH)/partitions.csv $(PROJECT_PATH)/build/partitions.bin
	@echo "Making spiffs image ..."
	@echo "Basse address $(FS_BASE_ADDR), size $(FS_SIZE) bytes"
	$(MKSPIFFS_COMPONENT_PATH)/../mkspiffs/src/mkspiffs -c $(PROJECT_PATH)/build/tmp-fs -b $(CONFIG_LUA_RTOS_SPIFFS_LOG_BLOCK_SIZE) -p $(CONFIG_LUA_RTOS_SPIFFS_LOG_PAGE_SIZE) -s $(FS_SIZE) $(BUILD_DIR_BASE)/spiffs_image.img
	@echo "Making lfs image ..."
	@echo "Basse address $(FS_BASE_ADDR), size $(FS_SIZE) bytes"
	$(MKLFS_COMPONENT_PATH)/../mklfs/src/mklfs -c $(PROJECT_PATH)/build/tmp-fs -b $(CONFIG_LUA_RTOS_LFS_BLOCK_SIZE) -p $(CONFIG_LUA_RTOS_LFS_PROG_SIZE) -r $(CONFIG_LUA_RTOS_LFS_READ_SIZE) -s $(FS_SIZE) -i $(BUILD_DIR_BASE)/lfs_image.img
	
flashfs: fs
	$(ESPTOOLPY_WRITE_FLASH) $(FS_BASE_ADDR) $(BUILD_DIR_BASE)/$(FS_IMAGE_FILE)_image.img

flashfs-args:
	@echo $(subst $(PROJECT_PATH)/build/,, \
			$(subst --port $(ESPPORT),, \
				$(subst python /components/esptool_py/esptool/esptool.py,, \
					$(subst $(IDF_PATH),, $(ESPTOOLPY_WRITE_FLASH) $(FS_BASE_ADDR) $(BUILD_DIR_BASE)/$(FS_IMAGE_FILE)_image.img)\
				)\
	 	  	) \
	 	  )